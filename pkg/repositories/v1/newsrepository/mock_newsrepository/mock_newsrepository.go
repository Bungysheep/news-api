// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/repositories/v1/newsrepository/newsrepository.go

// Package mock_newsrepository is a generated GoMock package.
package mock_newsrepository

import (
	context "context"
	news "github.com/bungysheep/news-api/pkg/models/v1/news"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockINewsRepository is a mock of INewsRepository interface
type MockINewsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockINewsRepositoryMockRecorder
}

// MockINewsRepositoryMockRecorder is the mock recorder for MockINewsRepository
type MockINewsRepositoryMockRecorder struct {
	mock *MockINewsRepository
}

// NewMockINewsRepository creates a new mock instance
func NewMockINewsRepository(ctrl *gomock.Controller) *MockINewsRepository {
	mock := &MockINewsRepository{ctrl: ctrl}
	mock.recorder = &MockINewsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockINewsRepository) EXPECT() *MockINewsRepositoryMockRecorder {
	return m.recorder
}

// GetByID mocks base method
func (m *MockINewsRepository) GetByID(arg0 context.Context, arg1 int64) (*news.News, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0, arg1)
	ret0, _ := ret[0].(*news.News)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockINewsRepositoryMockRecorder) GetByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockINewsRepository)(nil).GetByID), arg0, arg1)
}

// Publish mocks base method
func (m *MockINewsRepository) Publish(arg0 *news.News) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Publish", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Publish indicates an expected call of Publish
func (mr *MockINewsRepositoryMockRecorder) Publish(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockINewsRepository)(nil).Publish), arg0)
}

// GetIDsByPage mocks base method
func (m *MockINewsRepository) GetIDsByPage(arg0 context.Context, arg1 int) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIDsByPage", arg0, arg1)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIDsByPage indicates an expected call of GetIDsByPage
func (mr *MockINewsRepositoryMockRecorder) GetIDsByPage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIDsByPage", reflect.TypeOf((*MockINewsRepository)(nil).GetIDsByPage), arg0, arg1)
}
